#if !canImport(ObjectiveC)
import XCTest

extension BLArcTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLArcTests = [
        ("testDescription", testDescription),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testInitWithCoordinates", testInitWithCoordinates),
        ("testInitWithPoints", testInitWithPoints),
    ]
}

extension BLArrayTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLArrayTests = [
        ("testAppendU8", testAppendU8),
        ("testAsArray", testAsArray),
        ("testInit", testInit),
        ("testInitWithArray", testInitWithArray),
        ("testReplaceContents", testReplaceContents),
        ("testReserveCapacity", testReserveCapacity),
        ("testShrink", testShrink),
        ("testSubscript", testSubscript),
        ("testUnsafeAsArrayOf", testUnsafeAsArrayOf),
        ("testWeakAssign", testWeakAssign),
    ]
}

extension BLArrayViewTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLArrayViewTests = [
        ("testIterateArrayView", testIterateArrayView),
        ("testWithTemporaryView", testWithTemporaryView),
        ("testWithTemporaryViewWithEmptyArray", testWithTemporaryViewWithEmptyArray),
    ]
}

extension BLBaseClassTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLBaseClassTests = [
        ("testDefaultInitialize", testDefaultInitialize),
        ("testDeinitialize", testDeinitialize),
        ("testDeinitializeOnLeaveScope", testDeinitializeOnLeaveScope),
        ("testDeinitializeWeaklyAssignedObjects", testDeinitializeWeaklyAssignedObjects),
        ("testDeinitializeWithWeaklyAssignedObject", testDeinitializeWithWeaklyAssignedObject),
        ("testInitializeWithClosure", testInitializeWithClosure),
        ("testWeakAssignInitializer", testWeakAssignInitializer),
    ]
}

extension BLBoxITests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLBoxITests = [
        ("testAsRectangle", testAsRectangle),
        ("testCenter", testCenter),
        ("testContains", testContains),
        ("testContainsPoint", testContainsPoint),
        ("testDescription", testDescription),
        ("testEmpty", testEmpty),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testHeight", testHeight),
        ("testInitBoundsForPoints", testInitBoundsForPoints),
        ("testInitBoundsForPointsEmpty", testInitBoundsForPointsEmpty),
        ("testInitBoundsForPointsWithSinglePoint", testInitBoundsForPointsWithSinglePoint),
        ("testInitWithBLRect", testInitWithBLRect),
        ("testInitWithBLRectI", testInitWithBLRectI),
        ("testInitWithRoundedBox", testInitWithRoundedBox),
        ("testInitWithWidthAndHeight", testInitWithWidthAndHeight),
        ("testInset", testInset),
        ("testOffsetBy", testOffsetBy),
        ("testQuadrants", testQuadrants),
        ("testReset", testReset),
        ("testResized", testResized),
        ("testWidth", testWidth),
    ]
}

extension BLBoxTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLBoxTests = [
        ("testAsRectangle", testAsRectangle),
        ("testCenter", testCenter),
        ("testContains", testContains),
        ("testContainsPoint", testContainsPoint),
        ("testContainsPointI", testContainsPointI),
        ("testDescription", testDescription),
        ("testEmpty", testEmpty),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testHeight", testHeight),
        ("testInitBoundsForPoints", testInitBoundsForPoints),
        ("testInitBoundsForPointsEmpty", testInitBoundsForPointsEmpty),
        ("testInitBoundsForPointsWithSinglePoint", testInitBoundsForPointsWithSinglePoint),
        ("testInitWithBLRect", testInitWithBLRect),
        ("testInitWithBLRectI", testInitWithBLRectI),
        ("testInitWithBoxI", testInitWithBoxI),
        ("testInitWithWidthAndHeight", testInitWithWidthAndHeight),
        ("testInset", testInset),
        ("testOffsetBy", testOffsetBy),
        ("testQuadrants", testQuadrants),
        ("testReset", testReset),
        ("testResized", testResized),
        ("testWidth", testWidth),
    ]
}

extension BLCircleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLCircleTests = [
        ("testBoundingBox", testBoundingBox),
        ("testCenter", testCenter),
        ("testContains", testContains),
        ("testContainsPoint", testContainsPoint),
        ("testDescription", testDescription),
        ("testEquals", testEquals),
        ("testExpandedBy", testExpandedBy),
        ("testHashable", testHashable),
        ("testInitWithCoordinates", testInitWithCoordinates),
        ("testInitWithPoint", testInitWithPoint),
    ]
}

extension BLContextCookieTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLContextCookieTests = [
        ("testEquals", testEquals),
    ]
}

extension BLContextTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLContextTests = [
        ("testGetFillStyleGradientRefCount", testGetFillStyleGradientRefCount),
        ("testGetFillStylePatternRefCount", testGetFillStylePatternRefCount),
        ("testGetStrokeStyleGradientRefCount", testGetStrokeStyleGradientRefCount),
        ("testGetStrokeStylePatternRefCount", testGetStrokeStylePatternRefCount),
        ("testInit", testInit),
        ("testInitWithImage", testInitWithImage),
        ("testInitWithImageReturnsNilOnEmptyImage", testInitWithImageReturnsNilOnEmptyImage),
    ]
}

extension BLEllipseTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLEllipseTests = [
        ("testBoundingBox", testBoundingBox),
        ("testContains", testContains),
        ("testContainsPoint", testContainsPoint),
        ("testDescription", testDescription),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testInitWithCoordinates", testInitWithCoordinates),
        ("testInitWithPoint", testInitWithPoint),
        ("testInset", testInset),
    ]
}

extension BLFontManagerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLFontManagerTests = [
        ("testAddFace", testAddFace),
        ("testEphemeral", testEphemeral),
        ("testHasFace", testHasFace),
        ("testQueryFace", testQueryFace),
        ("testQueryFacesByFamilyName", testQueryFacesByFamilyName),
    ]
}

extension BLFontMatrixTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLFontMatrixTests = [
        ("testMapBox", testMapBox),
        ("testMapRect", testMapRect),
    ]
}

extension BLFontTableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLFontTableTests = [
        ("testWithBufferPointer", testWithBufferPointer),
    ]
}

extension BLFontUnicodeCoverageTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLFontUnicodeCoverageTests = [
        ("testEquals", testEquals),
    ]
}

extension BLFontVariationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLFontVariationTests = [
        ("testEquals", testEquals),
    ]
}

extension BLFormatInfoTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLFormatInfoTests = [
        ("testEquals", testEquals),
        ("testFormats", testFormats),
        ("testInitQuery", testInitQuery),
        ("testSanitize", testSanitize),
    ]
}

extension BLGlyphBufferTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLGlyphBufferTests = [
        ("testGlyphIds_Alphabet", testGlyphIds_Alphabet),
        ("testGlyphIds_Diacritic", testGlyphIds_Diacritic),
        ("testGlyphIds_SpecialCharacters", testGlyphIds_SpecialCharacters),
    ]
}

extension BLGradientStopTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLGradientStopTests = [
        ("testEquals", testEquals),
        ("testInitWithRgba32", testInitWithRgba32),
    ]
}

extension BLGradientTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLGradientTests = [
        ("testCopyOnWrite", testCopyOnWrite),
        ("testCopyOnWriteInstanceReference", testCopyOnWriteInstanceReference),
        ("testSetGradientValues", testSetGradientValues),
    ]
}

extension BLImageCodecTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLImageCodecTests = [
        ("testBuiltInCodecsCountMatchesInternalImageCodecs", testBuiltInCodecsCountMatchesInternalImageCodecs),
        ("testBuiltInCodecsInitializeWithoutError", testBuiltInCodecsInitializeWithoutError),
        ("testInitFromData", testInitFromData),
    ]
}

extension BLImageTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLImageTests = [
        ("testInitDefault", testInitDefault),
        ("testInitWithSize", testInitWithSize),
        ("testReadFromData", testReadFromData),
        ("testSize", testSize),
        ("testWriteToData", testWriteToData),
    ]
}

extension BLLineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLLineTests = [
        ("testDescription", testDescription),
        ("testEnd", testEnd),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testInitWithCoordinates", testInitWithCoordinates),
        ("testInitWithPoints", testInitWithPoints),
        ("testLeftRotated", testLeftRotated),
        ("testRightRotated", testRightRotated),
        ("testRotateLeft", testRotateLeft),
        ("testRotateRight", testRotateRight),
        ("testStart", testStart),
    ]
}

extension BLLinearGradientValuesTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLLinearGradientValuesTests = [
        ("testInitWithBox", testInitWithBox),
        ("testInitWithLine", testInitWithLine),
        ("testInitWithPoints", testInitWithPoints),
    ]
}

extension BLMatrix2DTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLMatrix2DTests = [
        ("testEquals", testEquals),
        ("testInitWithValues", testInitWithValues),
        ("testInverted", testInverted),
        ("testMapPolygon", testMapPolygon),
        ("testMultiply", testMultiply),
        ("testMultiplyPoint", testMultiplyPoint),
        ("testTwiceInverted", testTwiceInverted),
    ]
}

extension BLPathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLPathTests = [
        ("testEquatePathToItselfDoesNotTriggerExclusiveAccessCrash", testEquatePathToItselfDoesNotTriggerExclusiveAccessCrash),
        ("testFigureRanges", testFigureRanges),
        ("testFigureRangesWithClose", testFigureRangesWithClose),
    ]
}

extension BLPointITests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLPointITests = [
        ("testAdd", testAdd),
        ("testAddAssign", testAddAssign),
        ("testDescription", testDescription),
        ("testDivide", testDivide),
        ("testDivideAssign", testDivideAssign),
        ("testDivideAssignDouble", testDivideAssignDouble),
        ("testDivideDouble", testDivideDouble),
        ("testDivideDoubleInverse", testDivideDoubleInverse),
        ("testDotProduct", testDotProduct),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testInitRoundingPoint", testInitRoundingPoint),
        ("testMultiply", testMultiply),
        ("testMultiplyAssign", testMultiplyAssign),
        ("testMultiplyAssignDouble", testMultiplyAssignDouble),
        ("testMultiplyDouble", testMultiplyDouble),
        ("testMultiplyDoubleInverse", testMultiplyDoubleInverse),
        ("testNegate", testNegate),
        ("testOne", testOne),
        ("testPointwiseMax", testPointwiseMax),
        ("testPointwiseMin", testPointwiseMin),
        ("testSubtract", testSubtract),
        ("testSubtractAssign", testSubtractAssign),
        ("testZero", testZero),
    ]
}

extension BLPointTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLPointTests = [
        ("testAdd", testAdd),
        ("testAddAssign", testAddAssign),
        ("testDescription", testDescription),
        ("testDistanceSquaredTo", testDistanceSquaredTo),
        ("testDistanceTo", testDistanceTo),
        ("testDivide", testDivide),
        ("testDivideAssign", testDivideAssign),
        ("testDivideAssignDouble", testDivideAssignDouble),
        ("testDivideDouble", testDivideDouble),
        ("testDivideDoubleInverse", testDivideDoubleInverse),
        ("testDotProduct", testDotProduct),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testInitWithBLPointI", testInitWithBLPointI),
        ("testMagnitude", testMagnitude),
        ("testMultiply", testMultiply),
        ("testMultiplyAssign", testMultiplyAssign),
        ("testMultiplyAssignDouble", testMultiplyAssignDouble),
        ("testMultiplyDouble", testMultiplyDouble),
        ("testMultiplyDoubleInverse", testMultiplyDoubleInverse),
        ("testNegate", testNegate),
        ("testNormalized", testNormalized),
        ("testNormalizedOnZero", testNormalizedOnZero),
        ("testOne", testOne),
        ("testPointwiseMax", testPointwiseMax),
        ("testPointwiseMin", testPointwiseMin),
        ("testRotatedBy", testRotatedBy),
        ("testSubtract", testSubtract),
        ("testSubtractAssign", testSubtractAssign),
        ("testZero", testZero),
    ]
}

extension BLRandomTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLRandomTests = [
        ("testEquals", testEquals),
        ("testReset", testReset),
    ]
}

extension BLRangeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLRangeTests = [
        ("testEquals", testEquals),
        ("testEverything", testEverything),
    ]
}

extension BLRectITests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLRectITests = [
        ("testAsBox", testAsBox),
        ("testCenter", testCenter),
        ("testContains", testContains),
        ("testContainsPoint", testContainsPoint),
        ("testContainsPointI", testContainsPointI),
        ("testContainsRect", testContainsRect),
        ("testDescription", testDescription),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testInitWithBLBoxI", testInitWithBLBoxI),
        ("testInitWithLocationAndSize", testInitWithLocationAndSize),
        ("testInitWithRoundedBLBox", testInitWithRoundedBLBox),
        ("testInitWithRoundedRect", testInitWithRoundedRect),
        ("testInset", testInset),
        ("testIntersects", testIntersects),
        ("testLocation", testLocation),
        ("testOffsetBy", testOffsetBy),
        ("testQuadrants", testQuadrants),
        ("testResized", testResized),
        ("testSides", testSides),
        ("testSize", testSize),
    ]
}

extension BLRectTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLRectTests = [
        ("testAsBox", testAsBox),
        ("testCenter", testCenter),
        ("testContains", testContains),
        ("testContainsPoint", testContainsPoint),
        ("testContainsPointI", testContainsPointI),
        ("testContainsRect", testContainsRect),
        ("testDescription", testDescription),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testInitWithBLBox", testInitWithBLBox),
        ("testInitWithBLBoxI", testInitWithBLBoxI),
        ("testInitWithBLRectI", testInitWithBLRectI),
        ("testInitWithLocationAndSize", testInitWithLocationAndSize),
        ("testInset", testInset),
        ("testIntersects", testIntersects),
        ("testLocation", testLocation),
        ("testOffsetBy", testOffsetBy),
        ("testQuadrants", testQuadrants),
        ("testResized", testResized),
        ("testSides", testSides),
        ("testSize", testSize),
    ]
}

extension BLRegionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLRegionTests = [
        ("testArbitraryBoxesCrash", testArbitraryBoxesCrash),
        ("testIsRegionValidAssertionCrash", testIsRegionValidAssertionCrash),
        ("testRegionScan", testRegionScan),
        ("testSubtract", testSubtract),
    ]
}

extension BLRgba32Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLRgba32Tests = [
        ("testEquals", testEquals),
        ("testFadedTowards", testFadedTowards),
        ("testInitWithChannels", testInitWithChannels),
        ("testInitWithRgba64", testInitWithRgba64),
        ("testInitWithValue", testInitWithValue),
        ("testWithTransparency", testWithTransparency),
    ]
}

extension BLRgba64Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLRgba64Tests = [
        ("testEquals", testEquals),
        ("testInitWithChannels", testInitWithChannels),
        ("testInitWithRgba32", testInitWithRgba32),
        ("testInitWithValue", testInitWithValue),
        ("testWithTransparency", testWithTransparency),
    ]
}

extension BLRgbaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLRgbaTests = [
        ("testEquals", testEquals),
        ("testFadedTowards", testFadedTowards),
        ("testWithTransparency", testWithTransparency),
    ]
}

extension BLRoundRectTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLRoundRectTests = [
        ("testCenter", testCenter),
        ("testDescription", testDescription),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testInitWithRectAndPoint", testInitWithRectAndPoint),
        ("testInset", testInset),
        ("testQuadrants", testQuadrants),
        ("testSides", testSides),
        ("testSize", testSize),
    ]
}

extension BLRuntimeBuildInfoTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLRuntimeBuildInfoTests = [
        ("testCurrent", testCurrent),
    ]
}

extension BLRuntimeResourceInfoTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLRuntimeResourceInfoTests = [
        ("testCurrent", testCurrent),
    ]
}

extension BLRuntimeSystemInfoTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLRuntimeSystemInfoTests = [
        ("testCurrent", testCurrent),
    ]
}

extension BLSizeITests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLSizeITests = [
        ("testAdd", testAdd),
        ("testAddAssign", testAddAssign),
        ("testDescription", testDescription),
        ("testDivide", testDivide),
        ("testDivideAssign", testDivideAssign),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testMultiply", testMultiply),
        ("testMultiplyAssign", testMultiplyAssign),
        ("testSubtract", testSubtract),
        ("testSubtractAssign", testSubtractAssign),
    ]
}

extension BLSizeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLSizeTests = [
        ("testAdd", testAdd),
        ("testAddAssign", testAddAssign),
        ("testDescription", testDescription),
        ("testDivide", testDivide),
        ("testDivideAssign", testDivideAssign),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testMultiply", testMultiply),
        ("testMultiplyAssign", testMultiplyAssign),
        ("testSubtract", testSubtract),
        ("testSubtractAssign", testSubtractAssign),
    ]
}

extension BLStringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLStringTests = [
        ("testAppendBLString", testAppendBLString),
        ("testAppendBLStringToEmptyString", testAppendBLStringToEmptyString),
        ("testAppendString", testAppendString),
        ("testAppendStringToEmptyString", testAppendStringToEmptyString),
        ("testCollectionConformance", testCollectionConformance),
        ("testCopyOnWrite", testCopyOnWrite),
        ("testCreateWithStringLiteral", testCreateWithStringLiteral),
        ("testEquals", testEquals),
        ("testInit", testInit),
        ("testInitWithString", testInitWithString),
        ("testSequenceConformance", testSequenceConformance),
        ("testSubscript", testSubscript),
    ]
}

extension BLTriangleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BLTriangleTests = [
        ("testBoundingBox", testBoundingBox),
        ("testContains", testContains),
        ("testContainsPoint", testContainsPoint),
        ("testDescription", testDescription),
        ("testEquals", testEquals),
        ("testHashable", testHashable),
        ("testInitWithCoordinates", testInitWithCoordinates),
        ("testInitWithPoints", testInitWithPoints),
        ("testOffsetBy", testOffsetBy),
        ("testOffsetByPoint", testOffsetByPoint),
        ("testRotatedBy", testRotatedBy),
        ("testRotatedByAroundCentroid", testRotatedByAroundCentroid),
        ("testScaledBy", testScaledBy),
        ("testTransformedBy", testTransformedBy),
        ("testUnitEquilateral", testUnitEquilateral),
    ]
}

extension EnumsTestsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EnumsTestsTests = [
        ("testOptionSetConformance", testOptionSetConformance),
    ]
}

extension SwiftBlend2DTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SwiftBlend2DTests = [
        ("testConicalGradient", testConicalGradient),
        ("testFillShapes", testFillShapes),
        ("testSample1", testSample1),
        ("testSample2", testSample2),
        ("testSample3", testSample3),
        ("testSample4", testSample4),
        ("testSample5", testSample5),
        ("testSample6", testSample6),
        ("testSample7", testSample7),
        ("testSample8", testSample8),
        ("testStrokeShapes", testStrokeShapes),
        ("testTiger", testTiger),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BLArcTests.__allTests__BLArcTests),
        testCase(BLArrayTests.__allTests__BLArrayTests),
        testCase(BLArrayViewTests.__allTests__BLArrayViewTests),
        testCase(BLBaseClassTests.__allTests__BLBaseClassTests),
        testCase(BLBoxITests.__allTests__BLBoxITests),
        testCase(BLBoxTests.__allTests__BLBoxTests),
        testCase(BLCircleTests.__allTests__BLCircleTests),
        testCase(BLContextCookieTests.__allTests__BLContextCookieTests),
        testCase(BLContextTests.__allTests__BLContextTests),
        testCase(BLEllipseTests.__allTests__BLEllipseTests),
        testCase(BLFontManagerTests.__allTests__BLFontManagerTests),
        testCase(BLFontMatrixTests.__allTests__BLFontMatrixTests),
        testCase(BLFontTableTests.__allTests__BLFontTableTests),
        testCase(BLFontUnicodeCoverageTests.__allTests__BLFontUnicodeCoverageTests),
        testCase(BLFontVariationTests.__allTests__BLFontVariationTests),
        testCase(BLFormatInfoTests.__allTests__BLFormatInfoTests),
        testCase(BLGlyphBufferTests.__allTests__BLGlyphBufferTests),
        testCase(BLGradientStopTests.__allTests__BLGradientStopTests),
        testCase(BLGradientTests.__allTests__BLGradientTests),
        testCase(BLImageCodecTests.__allTests__BLImageCodecTests),
        testCase(BLImageTests.__allTests__BLImageTests),
        testCase(BLLineTests.__allTests__BLLineTests),
        testCase(BLLinearGradientValuesTests.__allTests__BLLinearGradientValuesTests),
        testCase(BLMatrix2DTests.__allTests__BLMatrix2DTests),
        testCase(BLPathTests.__allTests__BLPathTests),
        testCase(BLPointITests.__allTests__BLPointITests),
        testCase(BLPointTests.__allTests__BLPointTests),
        testCase(BLRandomTests.__allTests__BLRandomTests),
        testCase(BLRangeTests.__allTests__BLRangeTests),
        testCase(BLRectITests.__allTests__BLRectITests),
        testCase(BLRectTests.__allTests__BLRectTests),
        testCase(BLRegionTests.__allTests__BLRegionTests),
        testCase(BLRgba32Tests.__allTests__BLRgba32Tests),
        testCase(BLRgba64Tests.__allTests__BLRgba64Tests),
        testCase(BLRgbaTests.__allTests__BLRgbaTests),
        testCase(BLRoundRectTests.__allTests__BLRoundRectTests),
        testCase(BLRuntimeBuildInfoTests.__allTests__BLRuntimeBuildInfoTests),
        testCase(BLRuntimeResourceInfoTests.__allTests__BLRuntimeResourceInfoTests),
        testCase(BLRuntimeSystemInfoTests.__allTests__BLRuntimeSystemInfoTests),
        testCase(BLSizeITests.__allTests__BLSizeITests),
        testCase(BLSizeTests.__allTests__BLSizeTests),
        testCase(BLStringTests.__allTests__BLStringTests),
        testCase(BLTriangleTests.__allTests__BLTriangleTests),
        testCase(EnumsTestsTests.__allTests__EnumsTestsTests),
        testCase(SwiftBlend2DTests.__allTests__SwiftBlend2DTests),
    ]
}
#endif
